<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

<!--
    MyBatis 核心配置文件中，标签的顺序
    (properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,
    objectWrapperFactory?,reflectorFactory?,plugins?,environments?,
    databaseIdProvider?,mappers?)
-->


<!--    引入外部文件 properties          -->
    <properties resource="jdbc.properties"/>


    <!-- 设置类型别名，让Mapper配置文件中，resultType=别名     类型别名不区分大小写    如果不设置 alias 那么别名默认为 类名    -->
    <typeAliases>
<!--
            typeAlias : 设置某个类型的别名
                属性： type 设置需要设置别名的类型       alias 设置某个类型的别名，若不设置该属性，别名默认为类名
-->
<!--        <typeAlias type="com.syning.mybatis.pojo.User" alias="User"></typeAlias>-->

<!--        以包为单位，将包下所有的类型设置为默认的类型别名，即类名           同样不区分大小写        -->
        <package name="com.syning.mybatis.pojo"/>
    </typeAliases>

<!--
        environments：配置多个连接数据库的环境
            属性：default  设置默认使用环境的 id

        environment：配置某个具体的环境
            属性：id  表示连接数据库的环境的唯一标识，不能重复

        transactionManager：设置事务管理方法
            属性：type="JDBC|MANAGED"      事务管理方法
                JDBC 表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方法，事务的提交和回滚需要手动处理
                MANAGED 表示被管理，例如Spring
        dataSource：数据源
            属性：type="POOLED|UNPOOLED|JNDI"    设置数据源的类型
                POOLED  表示使用数据库连接池缓存数据库连接
                UNPOOLED  表示不使用数据库连接池
                JNDI  表示使用上下文中的数据源
-->
<!--    配置连接数据库的环境          -->
    <environments default="development">
        <environment id="development">

<!--            事务管理器               -->
            <transactionManager type="JDBC"/>

<!--            数据源，连接数据库的信息            -->
            <dataSource type="POOLED">
<!--                设置连接数据库驱动           -->
                <property name="driver" value="${jdbc.driver}"/>
<!--                设置连接数据库的连接地址            -->
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>


<!--    引入映射文件              -->
    <mappers>

<!--        <mapper resource="mappers/UserMapper.xml"/>-->

<!--
            引入映射文件也允许以包为单位，但是有两个要求
                1、Mapper接口所在的[包名]要和映射文件所在的[包名]一致
                2、Mapper接口要和映射文件的名字一致
-->
        <package name="com.syning.mybatis.mapper"/>

    </mappers>
</configuration>




